<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>p5.js on enkatsu log</title>
    <link>https://blog.enkatsu.org/tags/p5.js/</link>
    <description>Recent content in p5.js on enkatsu log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 05 Jan 2023 00:00:00 +0900</lastBuildDate><atom:link href="https://blog.enkatsu.org/tags/p5.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>p5.jsとMatter.jsを組み合わせる</title>
      <link>https://blog.enkatsu.org/posts/matter-p5js/</link>
      <pubDate>Thu, 05 Jan 2023 00:00:00 +0900</pubDate>
      
      <guid>https://blog.enkatsu.org/posts/matter-p5js/</guid>
      <description>p5.jsと Matter.jsを 組み合わせる資料が意外と少なかったのでメモ。
シンプルなやつ Link to heading シンプルに、staticな壁で囲んで、中にボールをいくつか入れるやつ。
Sorry, your browser doesn&#39;t support embedded videos. &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;circle&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/p5@1.5.0/lib/p5.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/matter-js/0.18.0/matter.min.js&amp;#34; integrity=&amp;#34;sha512-5T245ZTH0m0RfONiFm2NF0zcYcmAuNzcGyPSQ18j8Bs5Pbfhp5HP1hosrR8XRt5M3kSRqzjNMYpm2+it/AUX/g==&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34; referrerpolicy=&amp;#34;no-referrer&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;./sketch.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body style=&amp;#34;background-color: #222222&amp;#34;&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; let engine; const bodies = []; let Engine, Runner, Bodies, Composite; function setup() { createCanvas(600, 600); Engine = Matter.Engine; Runner = Matter.Runner; Bodies = Matter.Bodies; Composite = Matter.</description>
    </item>
    
    <item>
      <title>p5.jsスケッチを溜めておくためのテンプレートリポジトリを作った</title>
      <link>https://blog.enkatsu.org/posts/p5js-garally-template/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0900</pubDate>
      
      <guid>https://blog.enkatsu.org/posts/p5js-garally-template/</guid>
      <description>概要 Link to heading 前から、p5.jsのスケッチを溜めておくための、 HTML &amp;amp; JS テンプレートが欲しいと思っていたので作った。
OpenProcessingを使えばいいとも思うけど、 OpenProcessingだとiframeを使っているからなのか、 うまく動かない場合があるし、セルフホスティングした方が使い勝手がいいことも多い。
使い方 Link to heading https://github.com/enkatsu/p5js-garally-template
上記のテンプレートリポジトリを使って、自分のリポジトリを作成する。 作ったリポジトリを、ローカルにクローンしてきたら、 下記のコマンドで依存パッケージをインストールする。
npm i スケッチを追加する Link to heading 下記のコマンドで、新規のスケッチを追加できる。 ${SKETCH_TITLE} にはスケッチのタイトルを入力する。
node commands.mjs sketch:add -t ${SKETCH_TITLE} 開発用サーバを起動 Link to heading 下記のコマンドで開発用サーバを起動できる。
npm start http://localhost:3000
を開くとスケッチの一覧を表示できる。
ビルド Link to heading 下記のコマンドでビルド結果が ./docs に出力される。 gulpfile.mjs の distDirectory を変更すれば、出力先を変更できる。
npm run build まとめ Link to heading 下記のURLが、実際にこのテンプレートを使ったリポジトリとWebページ。
https://github.com/enkatsu/p5js-sketches
https://enkatsu.github.io/p5js-sketches/
今回はHTMLテンプレートエンジンにEJSを使った。 今の主流のテンプレートエンジンが何なのかわからないので、そのうち差し替えるかも。
あとは，テーマを設定できるようにしたいなーとも思ってる。
追記 Link to heading スケッチのサムネイルを設定できるようにした。</description>
    </item>
    
    <item>
      <title>p5.jsとArduinoを接続する</title>
      <link>https://blog.enkatsu.org/posts/p5serial/</link>
      <pubDate>Thu, 22 Dec 2022 00:00:00 +0900</pubDate>
      
      <guid>https://blog.enkatsu.org/posts/p5serial/</guid>
      <description>接続方法の比較 Link to heading p5-serial(p5.serialserver &amp;#43; p5.serialport) Link to heading ITP Camp2016でスタートしているプロジェクト 2019 Google Summer of Codeを獲得 2022 Processing Fellowshipを獲得 Web socketを使用 様々なブラウザで動作する Webソケットサーバ（p5.serialserver）が必要 WebソケットサーバはNode.js実装とProcessing実装が用意されている Processing実装は動かなかった（Processing4.0.1） 4.1.1では動作した（https://github.com/processing/processing4/pull/577） p5.web-serial Link to heading Web Serial APIを使用 ChromeとEdgeのみで動作 スマートフォンから使うにはBTなどを使う必要がある？ p5-serialの環境構築 Link to heading 検証環境 Link to heading Node.js: v14.18.1 p5.serialserver（Webソケットサーバ側） Link to heading git clone https://github.com/p5-serial/p5.serialserver.git cd p5.serialserver npm install node startserver.js Arduino Link to heading int buttonPin = 7; void setup() { Serial.</description>
    </item>
    
  </channel>
</rss>
